{"version":3,"file":"TagPicker.js","sourceRoot":"../src/","sources":["components/pickers/TagPicker/TagPicker.tsx"],"names":[],"mappings":";;;AAAA,oBAAoB;AACpB,6BAA+B;AAC/B,gDAAiD;AACjD,mBAAmB;AACnB,4CAA2C;AAE3C,0DAAiD;AACjD,qCAAmD;AACnD,6CAA+C;AAC/C,IAAM,MAAM,GAAQ,YAAY,CAAC;AASjC;IAAmC,yCAAiC;IAApE;;IASA,CAAC;IARe,0BAAY,GAAG;QAC3B,YAAY,EAAE,UAAC,KAAoB;YACjC,OAAO,oBAAC,iBAAO,uBAAK,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAW,CAAC;QACzD,CAAC;QACD,uBAAuB,EAAE,UAAC,KAAW,IAAK,OAAA,CACxC,6BAAK,SAAS,EAAE,eAAG,CAAC,yBAAyB,EAAE,MAAM,CAAC,mBAAmB,CAAC;;YAAI,KAAK,CAAC,IAAI;gBAAQ,CACjG,EAFyC,CAEzC;KACF,CAAC;IACJ,oBAAC;CAAA,AATD,CAAmC,uBAAU,GAS5C;AATY,sCAAa;AAWb,QAAA,SAAS,GAAG,kBAAM,CAA4D,aAAa,EAAE,6BAAS,EAAE,SAAS,EAAE;IAC9H,KAAK,EAAE,WAAW;CACnB,CAAC,CAAC","sourcesContent":["/* tslint:disable */\r\nimport * as React from 'react';\r\nimport { css, styled } from '../../../Utilities';\r\n/* tslint:enable */\r\nimport { BasePicker } from '../BasePicker';\r\nimport { IBasePickerProps, IBasePickerStyleProps, IBasePickerStyles } from '../BasePicker.types';\r\nimport { getStyles } from '../BasePicker.styles';\r\nimport { TagItem, ITagItemProps } from './TagItem';\r\nimport * as stylesImport from './TagItem.scss';\r\nconst styles: any = stylesImport;\r\n\r\nexport interface ITag {\r\n  key: string;\r\n  name: string;\r\n}\r\n\r\nexport interface ITagPickerProps extends IBasePickerProps<ITag> {}\r\n\r\nexport class TagPickerBase extends BasePicker<ITag, ITagPickerProps> {\r\n  public static defaultProps = {\r\n    onRenderItem: (props: ITagItemProps) => {\r\n      return <TagItem {...props}>{props.item.name}</TagItem>;\r\n    },\r\n    onRenderSuggestionsItem: (props: ITag) => (\r\n      <div className={css('ms-TagItem-TextOverflow', styles.tagItemTextOverflow)}> {props.name} </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport const TagPicker = styled<ITagPickerProps, IBasePickerStyleProps, IBasePickerStyles>(TagPickerBase, getStyles, undefined, {\r\n  scope: 'TagPicker'\r\n});\r\n"]}