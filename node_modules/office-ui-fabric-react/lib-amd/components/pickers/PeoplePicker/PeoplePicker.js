define(["require", "exports", "tslib", "react", "../../../Utilities", "../BasePicker", "../BasePicker.types", "./PeoplePickerItems/SelectedItemDefault", "./PeoplePickerItems/SuggestionItemDefault", "../BasePicker.styles", "./PeoplePicker.scss"], function (require, exports, tslib_1, React, Utilities_1, BasePicker_1, BasePicker_types_1, SelectedItemDefault_1, SuggestionItemDefault_1, BasePicker_styles_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var BasePeoplePicker = /** @class */ (function (_super) {
        tslib_1.__extends(BasePeoplePicker, _super);
        function BasePeoplePicker() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return BasePeoplePicker;
    }(BasePicker_1.BasePicker));
    exports.BasePeoplePicker = BasePeoplePicker;
    var MemberListPeoplePicker = /** @class */ (function (_super) {
        tslib_1.__extends(MemberListPeoplePicker, _super);
        function MemberListPeoplePicker() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return MemberListPeoplePicker;
    }(BasePicker_1.BasePickerListBelow));
    exports.MemberListPeoplePicker = MemberListPeoplePicker;
    /**
     * Standard People Picker.
     */
    var NormalPeoplePickerBase = /** @class */ (function (_super) {
        tslib_1.__extends(NormalPeoplePickerBase, _super);
        function NormalPeoplePickerBase() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        NormalPeoplePickerBase.defaultProps = {
            onRenderItem: function (props) { return React.createElement(SelectedItemDefault_1.SelectedItemDefault, tslib_1.__assign({}, props)); },
            onRenderSuggestionsItem: function (props, itemProps) {
                return SuggestionItemDefault_1.SuggestionItemNormal(tslib_1.__assign({}, props), tslib_1.__assign({}, itemProps));
            },
            createGenericItem: createGenericItem
        };
        return NormalPeoplePickerBase;
    }(BasePeoplePicker));
    exports.NormalPeoplePickerBase = NormalPeoplePickerBase;
    /**
     * Compact layout. It uses small personas when displaying search results.
     */
    var CompactPeoplePickerBase = /** @class */ (function (_super) {
        tslib_1.__extends(CompactPeoplePickerBase, _super);
        function CompactPeoplePickerBase() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        CompactPeoplePickerBase.defaultProps = {
            onRenderItem: function (props) { return React.createElement(SelectedItemDefault_1.SelectedItemDefault, tslib_1.__assign({}, props)); },
            onRenderSuggestionsItem: function (props, itemProps) {
                return SuggestionItemDefault_1.SuggestionItemSmall(tslib_1.__assign({}, props), tslib_1.__assign({}, itemProps));
            },
            createGenericItem: createGenericItem
        };
        return CompactPeoplePickerBase;
    }(BasePeoplePicker));
    exports.CompactPeoplePickerBase = CompactPeoplePickerBase;
    /**
     * MemberList layout. The selected people show up below the search box.
     */
    var ListPeoplePickerBase = /** @class */ (function (_super) {
        tslib_1.__extends(ListPeoplePickerBase, _super);
        function ListPeoplePickerBase() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        ListPeoplePickerBase.defaultProps = {
            onRenderItem: function (props) { return React.createElement(SelectedItemDefault_1.SelectedItemDefault, tslib_1.__assign({}, props)); },
            onRenderSuggestionsItem: function (props, itemProps) {
                return SuggestionItemDefault_1.SuggestionItemNormal(tslib_1.__assign({}, props), tslib_1.__assign({}, itemProps));
            },
            createGenericItem: createGenericItem
        };
        return ListPeoplePickerBase;
    }(MemberListPeoplePicker));
    exports.ListPeoplePickerBase = ListPeoplePickerBase;
    function createGenericItem(name, currentValidationState) {
        var personaToConvert = {
            key: name,
            primaryText: name,
            imageInitials: '!',
            ValidationState: currentValidationState
        };
        if (currentValidationState !== BasePicker_types_1.ValidationState.warning) {
            personaToConvert.imageInitials = Utilities_1.getInitials(name, Utilities_1.getRTL());
        }
        return personaToConvert;
    }
    exports.createGenericItem = createGenericItem;
    exports.NormalPeoplePicker = Utilities_1.styled(NormalPeoplePickerBase, BasePicker_styles_1.getStyles, undefined, {
        scope: 'NormalPeoplePicker'
    });
    exports.CompactPeoplePicker = Utilities_1.styled(CompactPeoplePickerBase, BasePicker_styles_1.getStyles, undefined, {
        scope: 'CompactPeoplePicker'
    });
    exports.ListPeoplePicker = Utilities_1.styled(ListPeoplePickerBase, BasePicker_styles_1.getStyles, undefined, {
        scope: 'ListPeoplePickerBase'
    });
});
//# sourceMappingURL=PeoplePicker.js.map